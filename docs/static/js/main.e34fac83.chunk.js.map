{"version":3,"sources":["lib/api.js","components/InputHeadline.js","lib/utils.js","components/SVG/Event.js","components/Poster.js","components/StockSelect.js","components/Input.js","components/Checkbox.js","components/Button.js","components/AutoSize.js","components/Swatch.js","components/InputPopup.js","components/PDFViewer.js","components/GradientSelector.js","components/EventEditor.js","components/ContainedDatePicker.js","App.js","serviceWorker.js","index.js"],"names":["getProfile","symbol","a","Promise","resolve","reject","req","unirest","query","region","headers","useQueryString","end","res","error","Error","body","getInterval","startDate","endDate","hours","Math","round","start","getTime","getDiffMs","zeroDate","date","setHours","setMinutes","setSeconds","getChart","interval","startDateIn","endDateIn","Date","setDate","getDate","console","log","period2","period1","stockArray","chart","result","timestamp","entries","i","v","push","close","indicators","quote","window","localStorage","setItem","JSON","stringify","searchStock","searchTerm","q","Text","styled","div","InputHeadline","children","pad","inString","string","slice","length","dateToString","getMonth","getFullYear","downloadURI","uri","name","link","document","createElement","download","href","appendChild","click","removeChild","inchesToPoints","inches","cmToPoints","cm","getPointsFromSize","size","value","unit","map","Event","Poster","title","subTitle","companyDescription","exchangeName","market","color","fill","eventColor","showDate","stockData","events","style","onAddEvent","lineThickness","useState","width","React","useMemo","height","num","stock","reduce","b","max","potens","String","toAdd","Number","ceil","getNiceSpan","minValue","maxValue","chartH","chartW","timestamps","event","includes","timeStamp","compare","smallest","abs","shiftToClosest","points","stockObject","index","array","x","y","toFixed","yStart","xEnd","yEnd","xStart","StockSelect","onStockSelect","options","setOptions","isSearchable","onChange","onInputChange","newItems","quotes","label","shortname","fetch","StyledInput","input","Input","placeholder","Container","CheckBox","props","checked","Component","onClick","StyledButton","enabled","Button","Inner","AutoSize","scale","setScale","containerElement","useRef","innerElement","calcScale","current","xScale","scrollWidth","yScale","scrollHeight","addEventListener","useEffect","ref","transform","Color","highlighted","Swatch","colors","activeIndex","Array","isArray","key","InputPopup","visible","onClose","onSubmit","maxCharacters","text","setText","e","target","pdfjs","GlobalWorkerOptions","workerSrc","version","GradientSelector","fillColors","onFillColors","editingFillColorIndex","setEditingFillColorIndex","triangle","disableAlpha","EventElement","p","iconStyle","padding","Hover","PopupContainer","onEdit","onDelete","icon","faEdit","faTrash","EventEditor","onAdd","showPopup","setShowPopup","editing","setEditing","id","format","border","ContainedDatePicker","pickerElement","onCalendarClose","sizes","intervals","SideBar","PosterContainer","getStockData","data","getProfileData","App","stockSymbol","setStockSymbol","setTitle","setSubtitle","setCompanyDescription","setExchangeName","setMarket","setStartDate","setEndDate","setStockData","setSize","setInterval","setLineThickness","setColor","setEventColor","setFill","setFillColors","setShowDate","currentlyAddingEvent","setCurrentlyAddingEvent","setEvents","profile","price","quoteType","assetProfile","longBusinessSummary","addEvent","eventText","newEvents","uuidv4","sort","axis","hex","Checkbox","newColors","filter","doc","PDFDocument","margins","top","bottom","left","right","svg","getElementById","SVGtoPDF","stream","pipe","blobStream","on","toBlobURL","exportPDF","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e34fac83.chunk.js","sourcesContent":["import unirest from 'unirest'\n\nexport const getQuotes = async (symbol = 'TSLA') => {\n  return new Promise(function (resolve, reject) {\n    var req = unirest('GET', 'https://apidojo-yahoo-finance-v1.p.rapidapi.com/market/v2/get-quotes')\n\n    req.query({\n      symbols: 'TSLA',\n      region: 'US'\n    })\n\n    req.headers({\n      'x-rapidapi-host': 'apidojo-yahoo-finance-v1.p.rapidapi.com',\n      'x-rapidapi-key': 'a9d3d38bf9mshfab793adc941393p1e232ajsn826528c6fced',\n      useQueryString: true\n    })\n\n    req.end(function (res) {\n      if (res.error) throw new Error(res.error)\n\n      console.log(res.body)\n\n      console.log('saved')\n      return res.body.quoteResponse\n    //   const data = res.body\n    //   return data\n    })\n  })\n}\n\nexport const useChart = () => {\n}\n\nexport const getProfile = async (symbol) => {\n  return new Promise(function (resolve, reject) {\n    var req = unirest('GET', 'https://rapidapi.p.rapidapi.com/stock/v2/get-profile')\n\n    req.query({\n      symbol: symbol,\n      region: 'US'\n    })\n\n    req.headers({\n      'x-rapidapi-host': 'apidojo-yahoo-finance-v1.p.rapidapi.com',\n      'x-rapidapi-key': '826524812emshaa5f49b4f980612p125332jsn1d475b70200c',\n      useQueryString: true\n    })\n\n    req.end(function (res) {\n      if (res.error) throw new Error(res.error)\n\n      // console.log(res.body)\n      resolve(res.body)\n    })\n  })\n}\n\nconst getDiffMs = (startDate, endDate) => {\n  const start = startDate.getTime()\n  const end = endDate.getTime()\n  return end - start\n}\n\n// One of the following is allowed 1m|2m|5m|15m|60m|1d\nconst getInterval = (startDate, endDate) => {\n  const hours = Math.round(getDiffMs(startDate, endDate) / 1000) / 60 / 60\n  if (hours <= 24) {\n    return '5m'\n  } else if (hours <= 24 * 5) {\n    return '15m'\n  } else if (hours <= 24 * 40) {\n    return '60m'\n  } else {\n    return '1d'\n  }\n}\n\nconst zeroDate = (date) => {\n  date.setHours(0)\n  date.setMinutes(0)\n  date.setSeconds(0)\n}\n\nexport const getChart = async (symbol, interval, startDateIn, endDateIn) => {\n  const startDate = new Date(startDateIn.getTime())\n  const endDate = (endDateIn.getTime() > (new Date()).getTime()) ? new Date() : new Date(endDateIn.getTime())\n\n  zeroDate(startDate)\n  zeroDate(endDate)\n  endDate.setDate(endDate.getDate() + 1)\n\n  return new Promise(function (resolve, reject) {\n    const req = unirest('GET', 'https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/v2/get-chart')\n    console.log('interval: ' + getInterval(startDate, endDate))\n\n    req.query({\n      interval: getInterval(startDate, endDate),\n      symbol: symbol,\n      period2: Math.round(endDate.getTime() / 1000),\n      period1: Math.round(startDate.getTime() / 1000)\n      // range: range, // Allowed values are (1d | 5d | 3mo | 6mo | 1y | 5y | max)\n      // region: 'US'\n    })\n\n    req.headers({\n      'x-rapidapi-host': 'apidojo-yahoo-finance-v1.p.rapidapi.com',\n      'x-rapidapi-key': '826524812emshaa5f49b4f980612p125332jsn1d475b70200c',\n      useQueryString: true\n    })\n\n    req.end(function (res) {\n      if (res.error) throw new Error(res.error)\n\n      // console.log(res.body)\n      const body = res.body\n      console.log(body)\n      const stockArray = []\n\n      if (body.chart.result[0].timestamp) {\n        for (const [i, v] of body.chart.result[0].timestamp.entries()) {\n          // if (v * 1000 > startDate.getTime() && v * 1000 < endDate.getTime()) {\n\n          //   stockArray.push({ timestamp: v, close: body.chart.result[0].indicators.quote[0].close[i] })\n          // }\n          stockArray.push({ timestamp: v, close: body.chart.result[0].indicators.quote[0].close[i] })\n        }\n      }\n\n      // console.log(stockArray)\n      window.localStorage.setItem('testData', JSON.stringify(body))\n      resolve(stockArray)\n    })\n  })\n}\n\nexport const searchStock = async (searchTerm) => {\n  return new Promise(function (resolve, reject) {\n    var req = unirest('GET', 'https://rapidapi.p.rapidapi.com/auto-complete')\n\n    req.query({\n      q: searchTerm\n      // region: 'US'\n    })\n\n    req.headers({\n      'x-rapidapi-host': 'apidojo-yahoo-finance-v1.p.rapidapi.com',\n      'x-rapidapi-key': '826524812emshaa5f49b4f980612p125332jsn1d475b70200c',\n      useQueryString: true\n    })\n\n    req.end(function (res) {\n      if (res.error) throw new Error(res.error)\n\n      resolve(res.body)\n    })\n  })\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Text = styled.div`\n  font-weight: bolder;\n  color: #666;\n  font-size: 14px;\n  margin-top: 6px;\n`\n\nfunction InputHeadline ({ children }) {\n  return (\n    <Text>{children}</Text>\n  )\n}\n\nexport default InputHeadline\n","import PDFDocument from '@react-pdf/pdfkit'\nimport SVGtoPDF from 'svg-to-pdfkit'\nimport blobStream from 'blob-stream'\n\nexport const getNiceSpan = (stockData) => {\n  const values = stockData.map(stock => stock.close)\n  const num = values.reduce(function (a, b) {\n    return Math.max(a, b)\n  }, 0)\n\n  // console.log('Number in is: ' + num)\n  const numString = String(Math.round(num))\n  const potens = numString.length\n\n  let toAdd = '1'\n  for (let i = 0; i < potens - 2; i++) {\n    toAdd = toAdd + '0'\n  }\n  toAdd = Number(toAdd)\n\n  let res = Math.ceil((num) / toAdd) * toAdd\n\n  res = Math.round(res / 5) * 5\n\n  //   numString = `${Number(numString.slice(0, 2)) + 1}${numString.slice(2)}` // This is dumb too bad\n\n  //   console.log(numString)\n  // console.log('Number out is: ' + res)\n\n  return [0, res]\n}\n\nexport const pad = (inString) => {\n  const string = '0' + inString\n  return string.slice(string.length - 2, string.length)\n}\n\nexport const dateToString = (date) => {\n  const res = pad(date.getDate()) + '/' + pad(date.getMonth() + 1) + '/' + date.getFullYear()\n  return res\n}\n\nexport const downloadURI = (uri, name) => {\n  var link = document.createElement('a')\n  link.download = name\n  link.href = uri\n  document.body.appendChild(link)\n  link.click()\n  document.body.removeChild(link)\n}\n\nexport const inchesToPoints = (inches) => {\n  return inches * 72\n}\n\nexport const cmToPoints = (cm) => {\n  return inchesToPoints(cm * 0.393700787)\n}\n\nexport const getPointsFromSize = (size) => {\n  if (size.value.unit === 'cm') {\n    return size.value.size.map(size => cmToPoints(size))\n  } else if (size.value.unit === 'inches') {\n    return size.value.size.map(size => inchesToPoints(size))\n  }\n}\n\nexport const svgToPDFURL = async (size) => {\n  let url = ''\n  const doc = new PDFDocument({\n    size: 'A4',\n    margins: { // by default, all are 72\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    }\n    // layout: 'landscape' // default is portrait\n  })\n  const svg = document.getElementById('mySVG')\n\n  SVGtoPDF(doc, svg, 0, 0, { width: 200 })\n  doc.end()\n  var stream = await doc.pipe(blobStream())\n  await stream.on('finish', function () {\n    // const iframe = document.getElementById('pdf-file')\n    // iframe.src = stream.toBlobURL('application/pdf')\n    // console.log(stream.toBlobURL('application/pdf'))\n    url = URL.createObjectURL(stream.toBlob()) // Possibly a way to use PDFViewer\n    // console.log(url)\n\n    downloadURI(stream.toBlobURL('application/pdf'), 'mychartv2.pdf')\n  })\n  console.log(url)\n  return url\n}\n\nexport const exportPDF = (size) => {\n  const doc = new PDFDocument({\n    size: size,\n    margins: { // by default, all are 72\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    }\n    // layout: 'landscape' // default is portrait\n  })\n  const svg = document.getElementById('mySVG')\n\n  SVGtoPDF(doc, svg, 0, 0, { width: 200 })\n  doc.end()\n  var stream = doc.pipe(blobStream())\n  stream.on('finish', function () {\n    // const iframe = document.getElementById('pdf-file')\n    // iframe.src = stream.toBlobURL('application/pdf')\n    // console.log(stream.toBlobURL('application/pdf'))\n    // console.log(URL.createObjectURL(stream.toBlob())) // Possibly a way to use PDFViewer\n    downloadURI(stream.toBlobURL('application/pdf'), 'mychart.pdf')\n  })\n}\n\nexport const getIndexFromTimeStamp = (stockData, inStamp) => {\n  if (stockData.length === 0) { return -1 }\n  for (const [i, stock] of stockData.entries()) {\n    if (inStamp === stock.timestamp) {\n      return i\n    }\n  }\n  return -1\n}\n\nexport const translate = (x, y) => {\n  return 'translate(' + x + ',' + y + ')'\n}\n","import React from 'react'\nimport { getIndexFromTimeStamp } from '../../lib/utils'\n\nconst lineLength = 10\n\nfunction Event ({ event, stockData, points, color, fontSize = 7 }) { // These are some ugly props... But it makes it easy to use\n  const index = getIndexFromTimeStamp(stockData, event.timeStamp)\n\n  if (index === -1) {\n    return ('')\n  }\n\n  return (\n    <g transform={'translate(' + points[getIndexFromTimeStamp(stockData, event.timeStamp)].split(' ')[0] + ',' + points[getIndexFromTimeStamp(stockData, event.timeStamp)].split(' ')[1] + ')'}>\n      <circle cx={0} cy={-lineLength} r='6' stroke='none' fill={color} />\n      {/* strokeDasharray='5,5' */}\n      <line x1={0} y1={0} x2={0} y2={-lineLength} stroke={color} strokeWidth={0.5} />\n      <text fill='#fff' fontWeight='bolder' fontSize={fontSize} y={-lineLength + 0} x='0' textAnchor='middle' dy='.3em'>{event.index}</text>\n    </g>\n  )\n}\nexport default Event\n","import React, { useState } from 'react'\nimport { getNiceSpan, dateToString, getPointsFromSize, getIndexFromTimeStamp, cmToPoints, translate } from '../lib/utils'\nimport ChartLines from './SVG/ChartLines'\nimport TextBox from './TextBox'\nimport Titles from './SVG/Titles'\nimport DateAxis from './SVG/DateAxis'\n\nimport Event from './SVG/Event'\n\nconst shiftToClosest = (compare, timestamps) => {\n  if (timestamps.length === 0) { return compare }\n\n  let smallest = 0\n  let res = 0\n  for (const timestamp of timestamps) {\n    if (smallest === 0) {\n      smallest = Math.abs(timestamp - compare)\n    } else {\n      if (smallest > Math.abs(timestamp - compare)) {\n        smallest = Math.abs(timestamp - compare)\n        res = timestamp\n      }\n    }\n  }\n  return res\n}\n\nconst Poster = ({ title = '', subTitle = '', symbol = '', companyDescription = '', exchangeName = '', market = '', color, fill = 'none', eventColor = color, showDate = true, startDate, endDate, size, stockData, events, style, onAddEvent, lineThickness }) => {\n  const [currentHoverElement, setCurrentHoverElement] = useState(null)\n  const width = React.useMemo(() => getPointsFromSize(size)[0] / 72 * 96, [size])\n  const height = React.useMemo(() => getPointsFromSize(size)[1] / 72 * 96, [size])\n\n  const [minValue, maxValue] = getNiceSpan(stockData ?? [])\n\n  const chartY = 300\n  const chartH = height - chartY - 265\n\n  const chartX = 130\n  const chartW = width - chartX - chartX\n\n  const timestamps = React.useMemo(() => {\n    if (!stockData) { return [] }\n    return stockData.map(stock => stock.timestamp)\n  }, [stockData])\n\n  events = React.useMemo(() => {\n    return events.map(event => {\n      if (timestamps.includes(event.timeStamp)) {\n        return event\n      } else {\n        event.timeStamp = shiftToClosest(event.timeStamp, timestamps)\n        return event\n      }\n    })\n  }, [events, stockData])\n\n  // add events...\n  const points = React.useMemo(() => {\n    if (stockData == null) return []\n\n    return stockData.map((stockObject, index, array) => {\n      const value = stockObject.close\n      const x = chartX + (index / (array.length - 1)) * chartW\n      const y = chartY + chartH - (((value - minValue) / maxValue) * chartH)\n\n      return `${x.toFixed(8)} ${y.toFixed(8)}`\n    })\n  }, [size, stockData, fill])\n\n  const fillPoints = React.useMemo(() => {\n    if (stockData == null) return []\n\n    const xStart = chartX + 0\n    const yStart = chartY + chartH - (((0 - minValue) / maxValue) * chartH)\n    const xEnd = chartX + ((stockData.length - 1) / (stockData.length - 1)) * chartW\n    const yEnd = chartY + chartH - (((0 - minValue) / maxValue) * chartH)\n    return [xStart + ' ' + yStart, ...points, xEnd + ' ' + yEnd]\n  }, [size, stockData, fill])\n\n  const hoverDot = (x, y) => {\n    setCurrentHoverElement(<circle cx={x} cy={y} r='8' stroke='none' fill={color} />)\n  }\n\n  return (\n    // <svg id='mySVG' viewBox={`0 0 ${width} ${height}`} style={style}> // Viewbox causes issues with font-sizes!\n    <svg id='mySVG' width={width} height={height} style={{ backgroundColor: 'green', display: 'block' }}>\n      {/* <svg id='mySVG' width={width} height={height} style={{ backgroundColor: 'green', display: 'block' }}> */}\n      <defs>\n        <linearGradient id='gradient' x1='0%' y1='0%' x2='0%' y2='100%'>\n          <stop offset='0%' stopColor={Array.isArray(fill) ? fill[0] : '#fff'} stopOpacity={1} />\n          <stop offset='100%' stopColor={Array.isArray(fill) ? fill[1] : '#fff'} stopOpacity={0} />\n        </linearGradient>\n      </defs>\n\n      {/* Borders */}\n      <rect x='0' y='0' width={width} height={height} fill='white' />\n      <rect x={cmToPoints(2.5)} y={cmToPoints(2.5)} width={width - cmToPoints(2.5) * 2} height={height - cmToPoints(2.5) * 2} fill='white' stroke='black' />\n      <rect x={cmToPoints(3)} y={cmToPoints(3)} width={width - cmToPoints(6)} height={height - cmToPoints(6)} fill='white' stroke='black' strokeWidth='3' />\n\n      {/* Titles */}\n      <Titles width={width} title={title} subTitle={subTitle} showDate={showDate} startDate={startDate} endDate={endDate} />\n\n      {/* CHART BG LINES */}\n      <ChartLines chartX={chartX} chartY={chartY} chartW={chartW} chartH={chartH} minValue={minValue} maxValue={maxValue} />\n\n      {/* CHART PATH */}\n      <polyline fill='none' strokeWidth={lineThickness} stroke={color} points={points.join(' ')} />\n      {fill !== 'none' &&\n        <polyline fill='url(#gradient)' strokeWidth='0' stroke='none' points={fillPoints.join(' ')} />}\n      {/* CURRENT HOVER DOT */}\n      {currentHoverElement}\n      {/* HOVER DOTS */}\n      {points.map((point, i) => <circle key={point} onClick={() => onAddEvent(stockData[i].timestamp)} onMouseLeave={() => setCurrentHoverElement(null)} onMouseEnter={(e) => { hoverDot(point.split(' ')[0], point.split(' ')[1]) }} cx={point.split(' ')[0]} cy={point.split(' ')[1]} r='10' stroke='none' fill='transparent' />)}\n\n      {/* EVENTS */}\n      {events.map(event => <Event key={event.id} event={event} color={eventColor} stockData={stockData} points={points} />)}\n\n      {/* <Events stockData={stockData} events={events} chartX={chartX} chartY={chartY} chartH={chartH} chartW={chartW} minValue={minValue} maxValue={maxValue} /> */}\n\n      {events.map((event, i) => <text key={event.id + 'eventText'} x={chartX + chartW - 300 + Math.floor(i / 5) * 160} y={chartY + chartH + 60 + 16 * (i - Math.floor(i / 5) * 5)} fontSize={7}>{i + 1 + '. ' + event.text}</text>)}\n\n      {/* Date axis */}\n      {timestamps.length && <DateAxis startStamp={timestamps[0]} endStamp={timestamps[timestamps.length - 1]} chartW={chartW} chartX={chartX} y={chartY + chartH + 25} />}\n\n      {/* COMPANY DESCRIPTION */}\n      <TextBox text={companyDescription} width={width - 730} fontSize='7' lineSpacing='12' maxLines={false} x={chartX + 100} y={chartY + chartH + 60} />\n      {/* <TextBox text={companyDescription} width={width} fontSize='9' lineSpacing='12' maxLines={false} x={0} y={chartY + chartH + 25} /> */}\n\n      {/* <text x={0} y={chartY + chartH + 25}>I am a very long text that will be rendered incorrectly I presume. I am a very long text that will be rendered incorrectly I presume.</text> */}\n\n      <g transform={translate(chartX, chartY + chartH + 60)}>\n        <text fontSize='7' fontWeight='bolder' x={0} y={0}>{symbol}</text>\n        <text fontSize='7' fontWeight='bolder' x={0} y={15}>{exchangeName}</text>\n        <text fontSize='7' fontWeight='bolder' x={0} y={30}>{market}</text>\n      </g>\n\n      {/* <text x={width - chartX - 135} y={chartY + chartH + 40}>Buy: 203 USD</text>\n      <text x={width - chartX - 135} y={chartY + chartH + 65}>SELL: 2052 USD</text>\n      <text x={width - chartX - 135} y={chartY + chartH + 90}>YIELD: +1050%</text> */}\n    </svg>\n  )\n}\n\nexport default Poster\n","import React, { useState } from 'react'\nimport Select from 'react-select'\nimport { searchStock } from '../lib/api'\n\nfunction StockSelect ({ value, onStockSelect }) {\n  const [options, setOptions] = useState([])\n\n  const updateSearch = (query) => {\n    if (!query) { return }\n\n    const fetch = async () => {\n      const res = await searchStock(query)\n      const newItems = res.quotes.map(quote => { return { value: quote.symbol, label: quote.shortname } })\n      setOptions(newItems)\n    }\n    fetch()\n  }\n\n  return (\n    <Select\n      isSearchable\n      value={value}\n      onChange={onStockSelect}\n      onInputChange={updateSearch}\n      options={options}\n    />\n  )\n}\n\nexport default StockSelect\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledInput = styled.input`\n  padding: 10px;\n  border-radius: 3px;\n  border: solid #ccc 1px;\n  margin: 2px 0;\n`\n\nfunction Input ({ value, onChange, placeholder }) {\n  return (\n    <StyledInput value={value} onChange={onChange} placeholder={placeholder} />\n  )\n}\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  cursor: pointer;\n  user-select: none;\n\n  :hover div {\n    background-color: rgba(68, 148, 84, 0.1);\n  }\n`\n\nconst CheckBox = styled.div`\n  width: 18px;\n  height: 18px;\n  border-radius: 3px;\n  margin-right: 4px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  background-color: ${props => props.checked ? '#449454 !important' : '#fff'};\n  border: 1px solid #ccc;\n  transition: 200ms;\n\n  animation-name: ${props => props.checked ? 'popup' : 'none'};\n  animation-duration: 600ms;\n\n  @keyframes popup {\n    0%   { transform: scale(1,1) }\n    10%  { transform: scale(1.1,1.1) }\n    30%  { transform: scale(.9,.9) }\n    50%  { transform: scale(1,1) }\n    57%  { transform: scale(1,1) }\n    64%  { transform: scale(1,1) }\n    100% { transform: scale(1,1) }\n  }\n`\n\nfunction Component ({ value, children, onChange }) {\n  return (\n    <Container onClick={() => onChange(!value)} checked={value}>\n      <CheckBox checked={value}>✓</CheckBox>\n      <p>{children}</p>\n    </Container>\n  )\n}\nexport default Component\n","import React, { Children } from 'react'\nimport styled from 'styled-components'\n\nconst StyledButton = styled.div`\n  background-color: ${props => props.enabled ? '#297BE6' : '#999'};\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 0;\n  border-radius: 3px;\n  cursor: ${props => props.enabled ? 'pointer' : 'initial'};\n  transition: 200ms;\n\n  :hover {\n    background-color: ${props => props.enabled ? '#6F9DDF' : '#999'};\n  }\n`\n\nfunction Button ({ onClick, enabled = true, children }) {\n  return (\n    <StyledButton onClick={enabled ? onClick : null} enabled={enabled}>\n      {children}\n    </StyledButton>\n  )\n}\nexport default Button\n","import React, { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n`\n\nconst Inner = styled.div`\n  position: absolute;\n  box-shadow: 0 0 20px #999;\n`\n\nfunction AutoSize ({ children }) {\n  const [scale, setScale] = useState(1)\n  const containerElement = useRef(null)\n  const innerElement = useRef(null)\n\n  const calcScale = () => {\n    if (!(containerElement.current && innerElement.current)) { return }\n    // console.log('it do go down')\n    // console.log(scale * 1000 + 'px')\n\n    const xScale = containerElement.current.scrollWidth / innerElement.current.scrollWidth\n    const yScale = containerElement.current.scrollHeight / innerElement.current.scrollHeight\n\n    setScale(xScale < yScale ? xScale : yScale)\n  }\n\n  window.addEventListener('resize', () => {\n    calcScale()\n  })\n\n  // This causes issues for the svg text scaling! Too bad!\n  useEffect(() => {\n    calcScale()\n  })\n\n  return (\n    <Container ref={containerElement}>\n      <Inner scale={scale} ref={innerElement} style={{ transform: 'scale(' + scale + ')' }}>\n        {/* Possible fix using z translation instead... */}\n        {/* <Inner scale={scale} ref={innerElement} style={{ transform: 'perspective(100px) translateZ(' + scale * 10 + 'px)' }}> */}\n\n        {children}\n        {/* Send back on rendered from child maybe? */}\n        {/* {React.cloneElement(children, { id: 'foobar' })} */}\n      </Inner>\n    </Container>\n  )\n}\nexport default AutoSize\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  height: 40px;\n  width: 100%;\n  border-radius: 5px;\n  margin: 20px 0;\n  overflow: hidden;\n  display: flex;\n`\n\nconst Color = styled.div`\n  background-color: ${props => props.color};\n  display: flex;\n  flex: 1;\n  border: ${props => props.highlighted ? 'solid #1273DE 3px' : 'none'};\n`\n\nfunction Swatch ({ colors, activeIndex = 0, onClick = () => (null) }) {\n  // console.log('rendering swatch')\n\n  if (!Array.isArray(colors)) {\n    colors = [colors]\n  }\n\n  if (colors.length === 1) {\n    activeIndex = 2\n  }\n\n  return (\n    <Container>\n      {colors.map((color, i) => <Color onClick={() => onClick(i)} key={'swatch' + color} color={color} highlighted={i === activeIndex} />)}\n    </Container>\n  )\n}\nexport default Swatch\n","import React, { useState } from 'react'\nimport Popup from 'react-animated-popup'\nimport Button from './Button'\nimport Input from './Input'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nfunction InputPopup ({ visible, onClose, onSubmit, title, maxCharacters = 9999 }) {\n  const [text, setText] = useState('')\n\n  const finish = () => {\n    onSubmit(text)\n    setText('')\n  }\n\n  return (\n    <Popup visible={visible} onClose={onClose}>\n      <Container>\n        <p>{title}</p>\n        <Input value={text} onChange={(e) => e.target.value.length < maxCharacters ? setText(e.target.value) : null} placeholder='Event text...' />\n        <Button enabled={!!text} onClick={finish}>Add event</Button>\n      </Container>\n    </Popup>\n  )\n}\nexport default InputPopup\n","import React, { useEffect, useState } from 'react'\nimport { pdfjs, Document, Page } from 'react-pdf'\n// import { pdf } from '@react-pdf/renderer'\nimport ClipLoader from 'react-spinners/ClipLoader'\nimport { svgToPDFURL } from '../lib/utils'\n\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\n\nconst Loader = () => {\n  return (\n    <ClipLoader size={150} color='#123abc' loading />\n  )\n}\n\nconst PDFViewer = ({ children, dimensions, aspectRatio, onLoadSuccess }) => {\n  const [pdfUrl, setPdfUrl] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      const child = React.Children.only(children)\n      const url = await svgToPDFURL([dimensions.height, dimensions.width], child)\n      console.log(url)\n      setPdfUrl(url)\n    // pdf(child).toBlob().then(blob => {\n    // setPdfUrl(URL.createObjectURL(blob))\n    // })\n    }\n\n    fetch()\n  }, [children])\n\n  let width = null\n  let height = null\n\n  if (dimensions.width > dimensions.height * aspectRatio) {\n    // height is limiting factor\n    height = dimensions.height\n  } else {\n    width = dimensions.width\n  }\n\n  return (\n    <Document file={pdfUrl} loading={<Loader />} onLoadSuccess={onLoadSuccess} noData={<Loader />}>\n      <Page renderMode='canvas' pageNumber={1} scale={1} width={width} height={height} />\n    </Document>\n  )\n}\n\nexport default PDFViewer\n","import React, { useState } from 'react'\nimport Swatch from './Swatch'\nimport { TwitterPicker } from 'react-color'\n\nfunction GradientSelector ({ fillColors, onFillColors }) {\n  const [editingFillColorIndex, setEditingFillColorIndex] = useState(0)\n\n  return (\n    <>\n      <Swatch colors={fillColors} activeIndex={editingFillColorIndex} onClick={(i) => setEditingFillColorIndex(i)} />\n      <TwitterPicker\n        triangle={editingFillColorIndex ? 'top-right' : 'top-left'}\n        colors={['#000', '#B80000', '#DB3E00', '#FCCB00', '#008B02', '#006B76', '#1273DE', '#004DCF', '#5300EB', '#EB9694', '#FAD0C3', '#FEF3BD', '#C1E1C5', '#BEDADC', '#C4DEF6', '#BED3F3', '#D4C4FB']}\n        width='100%'\n        color={fillColors[editingFillColorIndex]}\n        disableAlpha\n        onChange={(color) => onFillColors(color, editingFillColorIndex)}\n      />\n    </>\n  )\n}\nexport default GradientSelector\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\nimport InputHeadline from './InputHeadline'\nimport Button from './Button'\nimport Popup from 'react-animated-popup'\nimport DatePicker from 'react-date-picker'\nimport Input from './Input'\n\nconst Container = styled.div`\n  margin: 10px 0;\n`\n\nconst EventElement = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 6px;\n  border: 2px solid #eee;\n  border-radius: 2px;\n  margin: 6px 0;\n`\n\nconst Text = styled.p`\n  flex: 1;\n  margin: 0;\n  color: #666;\n`\n\nconst iconStyle = {\n  padding: '0 6'\n}\n\nconst Hover = styled.div`\n  opacity: 0.3;\n  transition: 200ms;\n  cursor: pointer;\n\n  :hover {\n    opacity: 6;\n  }\n`\n\nconst PopupContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nfunction Event ({ event, onEdit, onDelete }) {\n  return (\n    <EventElement>\n      <Text>{event.index}: {event.text}</Text>\n      <Hover onClick={() => onEdit(event)}>\n        <FontAwesomeIcon size='sm' style={iconStyle} icon={faEdit} />\n      </Hover>\n      <Hover onClick={() => onDelete(event)}>\n        <FontAwesomeIcon size='sm' style={iconStyle} icon={faTrash} />\n      </Hover>\n    </EventElement>\n  )\n}\n\nfunction EventEditor ({ events, onDelete, onAdd }) {\n  const [showPopup, setShowPopup] = useState(false)\n  const [date, setDate] = useState(new Date())\n  const [text, setText] = useState('')\n  const [editing, setEditing] = useState()\n\n  const openPopup = () => {\n    setShowPopup(true)\n  }\n\n  const createEvent = () => {\n    setEditing(null)\n    setShowPopup(false)\n    onAdd({ timeStamp: Math.round(date.getTime() / 1000), text: text })\n  }\n\n  const onEdit = (event) => {\n    setEditing(event)\n    setText(event.text)\n    setDate(new Date(event.timeStamp * 1000))\n    setShowPopup(true)\n    onDelete(event)\n  }\n\n  const onClose = () => {\n    setShowPopup(false)\n    if (editing) {\n      onAdd(editing)\n      setEditing(null)\n    }\n  }\n\n  return (\n    <Container>\n      <InputHeadline>Events</InputHeadline>\n      {events.map(event => <Event event={event} onDelete={onDelete} onEdit={onEdit} key={'eventEditor' + event.id} />)}\n      <Button onClick={openPopup}>Create new event</Button>\n      <Popup visible={showPopup} onClose={onClose}>\n        <PopupContainer>\n          <p>New event</p>\n          <DatePicker\n            format='dd/MM/yyyy'\n            style={{ border: 'none' }}\n            onChange={setDate}\n            value={date}\n          />\n          <Input onChange={(e) => setText(e.target.value)} value={text} />\n          <Button onClick={createEvent}>Create event</Button>\n        </PopupContainer>\n      </Popup>\n    </Container>\n  )\n}\nexport default EventEditor\n","import React, { useState, useRef, useEffect } from 'react'\nimport DatePicker from 'react-date-picker'\n\nfunction ContainedDatePicker ({ value, onChange }) {\n  const [date, setDate] = useState(value)\n  const pickerElement = useRef(null)\n\n  return (\n    <DatePicker\n      onCalendarClose={() => onChange(date)}\n      ref={pickerElement}\n      format='dd/MM/yyyy'\n      style={{ border: 'none' }}\n      onChange={setDate}\n      value={date}\n    />\n  )\n}\nexport default ContainedDatePicker\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\n// import DatePicker from 'react-date-picker'\nimport Select from 'react-select'\nimport { getQuotes, getChart, getProfile } from './lib/api'\nimport InputHeadline from './components/InputHeadline'\nimport Poster from './components/Poster'\nimport StockSelect from './components/StockSelect'\nimport { dateToString, exportPDF, getPointsFromSize } from './lib/utils'\nimport Input from './components/Input'\nimport { TwitterPicker } from 'react-color'\nimport Checkbox from './components/Checkbox'\nimport Button from './components/Button'\nimport AutoSize from './components/AutoSize'\nimport Swatch from './components/Swatch'\nimport Slider from 'react-input-slider'\nimport InputPopup from './components/InputPopup'\nimport PDFViewer from './components/PDFViewer'\nimport GradientSelector from './components/GradientSelector'\nimport EventEditor from './components/EventEditor'\nimport { v4 as uuidv4 } from 'uuid'\nimport ContainedDatePicker from './components/ContainedDatePicker'\n\nconst sizes = [\n  { value: { size: [40, 30], unit: 'cm' }, label: '30x40cm' },\n  { value: { size: [70, 50], unit: 'cm' }, label: '50x70cm' },\n  { value: { size: [100, 70], unit: 'cm' }, label: '70x100cm' },\n  { value: { size: [17, 11], unit: 'inches' }, label: '11x17\"' },\n  { value: { size: [24, 18], unit: 'inches' }, label: '18x24\"' },\n  { value: { size: [36, 24], unit: 'inches' }, label: '24x36\"' }\n]\n\nconst intervals = [\n  { value: '5m', label: '5m' },\n  { value: '15m', label: '15m' },\n  { value: '1d', label: '1d' },\n  { value: '1wk', label: '1wk' },\n  { value: '1mo', label: '1mo' }\n]\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  min-height: 100vh;\n  width: 100vw;\n\n  .react-date-picker__wrapper {\n    border: none;\n  }\n\n  .react-date-picker__wrapper svg {\n    width: 12px;\n  }\n`\n\nconst SideBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  width: 300px;\n  padding: 20px;\n  max-height: calc(100vh - 40px);\n  overflow: scroll;\n\n  * {\n    flex-shrink: 0;\n  }\n`\n\nconst PosterContainer = styled.div`\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-basis: 1px;\n  background-color: #f4f4f4;\n  padding: 20px;\n`\n\nconst getStockData = async (symbol, interval, startDate, endDate) => {\n  const data = await getChart(symbol, interval, startDate, endDate)\n  // window.localStorage.setItem('apple', JSON.stringify(data))\n  // const data = JSON.parse(window.localStorage.getItem('apple'))\n  // console.log(data)\n  return (data)\n}\n\nconst getProfileData = async (symbol) => {\n  const data = await getProfile(symbol)\n  // console.log('here is the data')\n  // console.log(data)\n  // window.localStorage.setItem('appleProfile', JSON.stringify(data))\n  // const data = JSON.parse(window.localStorage.getItem('appleProfile'))\n\n  // console.log(data)\n\n  return (data)\n}\n\nfunction App () {\n  const [stockSymbol, setStockSymbol] = useState({ value: 'AAPL', label: 'Apple Inc' })\n  const [title, setTitle] = useState('Your title')\n  const [subTitle, setSubtitle] = useState('Your subtitle')\n  const [companyDescription, setCompanyDescription] = useState('')\n  const [exchangeName, setExchangeName] = useState('')\n  const [market, setMarket] = useState('')\n  const [startDate, setStartDate] = useState(new Date('2007-01-01T01:00:00'))\n  const [endDate, setEndDate] = useState(new Date())\n  const [stockData, setStockData] = useState(null)\n  const [size, setSize] = useState(sizes[0])\n  const [interval, setInterval] = useState(intervals[1])\n  const [lineThickness, setLineThickness] = useState(1)\n  const [color, setColor] = useState('#FCCB00')\n  const [eventColor, setEventColor] = useState(true)\n  const [fill, setFill] = useState(false)\n  const [fillColors, setFillColors] = useState(['#FEF3BD', '#FCCB00'])\n  const [showDate, setShowDate] = useState(true)\n  const [currentlyAddingEvent, setCurrentlyAddingEvent] = useState(false)\n  const [events, setEvents] = useState([]) // [{timestamp: 1, text: 'foo'}]\n\n  useEffect(() => {\n    if (!stockSymbol) { return }\n    const fetch = async () => {\n      console.log('fetching stock')\n      const stock = await getStockData(stockSymbol.value, interval.value, startDate, endDate)\n      setStockData(stock)\n\n      // use this line to debug events\n      // setEvents([{ timeStamp: 1599053400, text: 'Fam pork', index: 1, id: 'foo' }, { timeStamp: 1599658200, text: 'Vinyl pinterest', index: 2, id: 'foo2' }, { timeStamp: 1600176600, text: 'XOXO schlitz', index: 3, id: 'foo3' }, { timeStamp: 1600435800, text: 'Vape shaman', index: 4, id: 'foo4' }, { timeStamp: 1601559000, text: 'Poke synth', index: 5, id: 'foo5' }, { timeStamp: 1602250200, text: 'Pour-over', index: 6, id: 'foo6' }, { timeStamp: 1602595800, text: 'Next level', index: 7, id: 'foo7' }, { timeStamp: 1603805400, text: 'taiyaki truffaut', index: 8, id: 'foo8' }, { timeStamp: 1603891800, text: 'Bushwick green', index: 9, id: 'foo9' }, { timeStamp: 1603978200, text: 'Tumblr flexitarian ', index: 10, id: 'foo10' }])\n    }\n    fetch()\n  }, [stockSymbol, interval, startDate, endDate])\n\n  useEffect(() => {\n    if (!stockSymbol) { return }\n    const fetch = async () => {\n      console.log('fetching profile')\n      const profile = await getProfileData(stockSymbol.value)\n      setExchangeName(profile.price.exchangeName)\n      setMarket(profile.quoteType.market)\n      setCompanyDescription(profile.assetProfile.longBusinessSummary)\n    }\n    fetch()\n  }, [stockSymbol])\n\n  const addEvent = (eventText, timeStamp = currentlyAddingEvent) => {\n    const newEvents = [...events, { timeStamp: timeStamp, text: eventText, index: 0, id: uuidv4() }].sort((a, b) => a.timeStamp > b.timeStamp).map((event, i) => ({ ...event, index: i + 1 }))\n\n    setEvents(newEvents)\n    console.log(newEvents)\n    setCurrentlyAddingEvent(false)\n  }\n\n  const onFillColors = (color, i) => {\n    const newColors = [...fillColors]\n    newColors[i] = color.hex\n    console.log(newColors)\n    setFillColors(newColors)\n  }\n\n  const deleteEvent = (event) => {\n    setEvents(events.filter(e => e.timeStamp !== event.timeStamp))\n  }\n\n  return (\n    <Container>\n      {/* <iframe id='pdf-file' />  Iframe used for pdf export debugging */}\n      <PosterContainer>\n        <AutoSize>\n          <Poster title={title} subTitle={subTitle} symbol={stockSymbol.value} companyDescription={companyDescription} exchangeName={exchangeName} market={market} startDate={startDate} endDate={endDate} color={color} fill={fill ? fillColors : 'none'} eventColor={eventColor === '#000' ? eventColor : color} showDate={showDate} size={size} stockData={stockData} events={events} onAddEvent={setCurrentlyAddingEvent} lineThickness={lineThickness} />\n        </AutoSize>\n        {/* <Poster title={title} subTitle={subTitle} companyDescription={companyDescription} startDate={startDate} endDate={endDate} color={color} fill={fill ? fillColors : 'none'} eventColor={eventColor === '#000' ? eventColor : color} showDate={showDate} size={size} stockData={stockData} timeStamps={timeStamps} events={events} onAddEvent={setCurrentlyAddingEvent} lineThickness={lineThickness} /> */}\n\n        {/* <PDFViewer dimensions={{ height: size.height, width: size.width }} aspectRatio={size.width / size.height}>\n          <p>test</p>\n        </PDFViewer> */}\n      </PosterContainer>\n\n      <SideBar>\n        <StockSelect value={stockSymbol} onStockSelect={setStockSymbol} />\n\n        <Input value={title} onChange={(e) => setTitle(e.target.value)} placeholder='Title' />\n        <Input value={subTitle} onChange={(e) => setSubtitle(e.target.value)} placeholder='Subtitle' />\n\n        <InputHeadline>Select start date</InputHeadline>\n        <ContainedDatePicker\n          format='dd/MM/yyyy'\n          style={{ border: 'none' }}\n          onChange={setStartDate}\n          value={startDate}\n        />\n        <InputHeadline>Select end date</InputHeadline>\n        <ContainedDatePicker\n          format='dd/MM/yyyy'\n          style={{ border: 'none' }}\n          onCalendarClose={setEndDate}\n          value={endDate}\n        />\n\n        <Select\n          value={size}\n          onChange={setSize}\n          options={sizes}\n        />\n\n        <Select value={interval} onChange={setInterval} options={intervals} />\n\n        <InputHeadline>Stroke thickness: {lineThickness}px</InputHeadline>\n        <Slider\n          axis='x'\n          x={lineThickness * 10}\n          onChange={({ x }) => setLineThickness(x / 10)}\n        />\n\n        <Swatch colors={color} />\n        <TwitterPicker\n          colors={['#000', '#B80000', '#DB3E00', '#FCCB00', '#008B02', '#006B76', '#1273DE', '#004DCF', '#5300EB', '#EB9694', '#FAD0C3', '#FEF3BD', '#C1E1C5', '#BEDADC', '#C4DEF6', '#BED3F3', '#D4C4FB']}\n          width='100%'\n          color={color}\n          disableAlpha\n          onChange={(color) => setColor(color.hex)}\n        />\n\n        <Checkbox value={fill} onChange={() => setFill(!fill)}>Filled</Checkbox>\n        {fill && <GradientSelector fillColors={fillColors} onFillColors={(color, i) => onFillColors(color, i)} />}\n\n        <Checkbox value={showDate} onChange={() => setShowDate(!showDate)}>Show date</Checkbox>\n        <Checkbox value={eventColor === '#000'} onChange={() => setEventColor(eventColor === '#000' ? color : '#000')}>Black event indicators</Checkbox>\n\n        <EventEditor events={events} onAdd={(event) => addEvent(event.text, event.timeStamp)} onDelete={deleteEvent} />\n\n        <Button onClick={() => exportPDF(getPointsFromSize(size))}>Export PDF</Button>\n\n      </SideBar>\n\n      <InputPopup maxCharacters={46} visible={currentlyAddingEvent} onClose={() => setCurrentlyAddingEvent(false)} title={'Create event for ' + dateToString(new Date(currentlyAddingEvent * 1000))} onSubmit={addEvent} />\n    </Container>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}